# File names should be generated by streaming the output of ls -al into a text file
# In the parsed mol file directory run:
# ls -al >> fileNames
# Then move the fileNames file into the confirmation directory
filenames = 'fileNames'
# molnames can be extracted directly from the original combined .mol file 
# Just run parseNames.py in the same directory as the original .mol file
molnames = 'moleculeNames'

files = []
mols = []

def printAnamoly(pair):
    sep = '+'*80
    print(sep)
    print()
    print(pair)
    print()
    print(sep)

with open(filenames, 'r') as infile:
    for name in infile:
        # We need to parse the ls data from the directory into molecule names
        # This entails extracting the file name from the ls data
        #   then peeling off the hyphen, index number, and .mol2 bits
        #   This should leave us with just the molecule name
        # First method
        # IMPORTANT! This method assumes that there are 9 or fewer indicents of any given name
        #   in the original combined mol2 file
        # If we have 10 or more incidents then this will leave numbers appended to the 
        #   molecule name!
        #name = name.strip().split()[8][:-7]
        
        # Second method
        # Get the name of the file from the ls data
        name = name.strip().split()[8]
        # Get the portion prior to the hyphen
        # This method ONLY works if the file name only has a single hyphen
        #   separating the index from the molecule name
        name = name.strip().split('-')[0]
        files.append(name)
    print('Found {0} file names.'.format(len(files)))

with open(molnames, 'r') as infile:
    for name in infile:
        name = name.strip()
        mols.append(name)
    print('Found {0} molecule names.'.format(len(mols)))

pairs = zip(files, mols)

mismatches = 0
for pair in pairs:
    if pair[0] != pair[1]:
        mismatches += 1
        printAnamoly(pair)

print('Found {0} mismatches.'.format(mismatches))

